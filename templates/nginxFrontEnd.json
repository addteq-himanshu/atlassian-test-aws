{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description": "Nginx front end instance",

  "Parameters": {
    "vpcId": {
      "Type": "AWS::EC2::VPC::Id"
    },
    "availabilityZone": {
      "Type": "String"
    },
    "hostedZoneName": {
      "Type": "String"
    },
    "stackId": {
      "Type": "String"
    }
  },

  "Mappings": {
  },

  "Conditions": {
  },

  "Resources": {

    "securityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "enable SSH and HTTP incoming and anything outgoing",
        "VpcId": { "Ref": "vpcId" },
        "SecurityGroupIngress": [{
          "IpProtocol": "tcp",
          "FromPort": "22",
          "ToPort": "22",
          "CidrIp": "0.0.0.0/0"
        }, {
          "IpProtocol": "tcp",
          "FromPort": "80",
          "ToPort": "80",
          "CidrIp": "0.0.0.0/0"
        }],
        "SecurityGroupEgress": [{
          "IpProtocol": "-1",
          "FromPort": "0",
          "ToPort": "65535",
          "CidrIp": "0.0.0.0/0"
        }]
      }
    },

    "layer": {
      "Type": "AWS::OpsWorks::Layer",
      "Properties": {
        "AutoAssignElasticIps": true,
        "AutoAssignPublicIps": false,
        "CustomRecipes": {
          "Setup": [ "nginxFrontEnd::default" ]
        },
        "CustomSecurityGroupIds": [ { "Ref": "securityGroup" } ],
        "EnableAutoHealing": true,
        "InstallUpdatesOnBoot": true,
        "Name": "nginxFrontEnd",
        "Shortname": "nginx",
        "StackId": { "Ref": "stackId" },
        "Type": "custom"
      }
    },

    "loadBalancer" : {
      "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties" : {
        "AvailabilityZones" : [ { "Ref": "availabilityZone"  } ],
        "Listeners" : [{
          "LoadBalancerPort" : "80",
          "InstancePort" : "80",
          "Protocol" : "HTTP"
        }]
      }
    },

    "elasticLoadBalancerAttachment": {
      "Type": "AWS::OpsWorks::ElasticLoadBalancerAttachment",
      "Properties": {
        "ElasticLoadBalancerName" : { "Ref": "loadBalancer" },
        "LayerId" : { "Ref": "layer" }
      }
    },

    "recordSetGroup" : {
      "Type" : "AWS::Route53::RecordSetGroup",
      "Properties" : {
        "HostedZoneName" : { "Ref": "hostedZoneName" },
        "RecordSets" : [{
          "Name" : { "Fn::Join": [ "", [ "atlassian", ".", { "Ref": "hostedZoneName" } ] ] },
          "Type" : "A",
          "AliasTarget" : {
            "HostedZoneId" : { "Fn::GetAtt" : [ "loadBalancer", "CanonicalHostedZoneNameID" ] },
            "DNSName" : { "Fn::GetAtt" : [ "loadBalancer","CanonicalHostedZoneName" ] }
          }
        }]
      }
    },

    "instance": {
      "Type": "AWS::OpsWorks::Instance",
      "Properties": {
        "InstanceType": "t2.micro",
        "LayerIds": [ { "Ref": "layer" } ],
        "StackId": { "Ref": "stackId" }
      }
    }

  },

  "Outputs": {
  }
}
